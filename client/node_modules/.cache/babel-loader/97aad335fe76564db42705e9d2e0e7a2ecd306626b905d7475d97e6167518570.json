{"ast":null,"code":"var _jsxFileName = \"/Users/gurkanaltay/Desktop/test/tenant.retako.com/client/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { API_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authError, setAuthError] = useState('');\n\n  // Sayfa yüklendiğinde localStorage'dan kullanıcı bilgilerini al\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Giriş işlemi\n  const login = async (email, password) => {\n    setAuthError('');\n    try {\n      const response = await fetch(`${API_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Giriş başarısız');\n      }\n\n      // Kullanıcı bilgilerini state ve localStorage'a kaydet\n      setCurrentUser(data);\n      localStorage.setItem('user', JSON.stringify(data));\n      return data;\n    } catch (error) {\n      setAuthError(error.message);\n      throw error;\n    }\n  };\n\n  // Kayıt işlemi\n  const register = async (name, email, password, phone) => {\n    setAuthError('');\n    try {\n      const response = await fetch(`${API_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          phone\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Kayıt başarısız');\n      }\n\n      // Kullanıcı bilgilerini state ve localStorage'a kaydet\n      setCurrentUser(data);\n      localStorage.setItem('user', JSON.stringify(data));\n      return data;\n    } catch (error) {\n      setAuthError(error.message);\n      throw error;\n    }\n  };\n\n  // Çıkış işlemi\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n\n  // API istekleri için token ekleyen fonksiyon\n  const authFetch = async (url, options = {}) => {\n    if (!currentUser || !currentUser.accessToken) {\n      throw new Error('User is not logged in');\n    }\n\n    // URL tam URL değilse, API_URL ile birleştir\n    const fullUrl = url.startsWith('http') ? url : `${API_URL}${url}`;\n    const headers = {\n      ...(options.headers || {}),\n      'Authorization': `Bearer ${currentUser.accessToken}`\n    };\n    return fetch(fullUrl, {\n      ...options,\n      headers\n    });\n  };\n  const value = {\n    currentUser,\n    loading,\n    authError,\n    login,\n    register,\n    logout,\n    authFetch\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"huM3G9BxCnGfjQh5DPyhUWTHzUs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","authError","setAuthError","user","localStorage","getItem","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","setItem","error","register","name","phone","logout","removeItem","authFetch","url","options","accessToken","fullUrl","startsWith","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gurkanaltay/Desktop/test/tenant.retako.com/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { API_URL } from '../config';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authError, setAuthError] = useState('');\n  \n  // Sayfa yüklendiğinde localStorage'dan kullanıcı bilgilerini al\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n  \n  // Giriş işlemi\n  const login = async (email, password) => {\n    setAuthError('');\n    try {\n      const response = await fetch(`${API_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Giriş başarısız');\n      }\n      \n      // Kullanıcı bilgilerini state ve localStorage'a kaydet\n      setCurrentUser(data);\n      localStorage.setItem('user', JSON.stringify(data));\n      return data;\n    } catch (error) {\n      setAuthError(error.message);\n      throw error;\n    }\n  };\n  \n  // Kayıt işlemi\n  const register = async (name, email, password, phone) => {\n    setAuthError('');\n    try {\n      const response = await fetch(`${API_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password, phone }),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        throw new Error(data.message || 'Kayıt başarısız');\n      }\n      \n      // Kullanıcı bilgilerini state ve localStorage'a kaydet\n      setCurrentUser(data);\n      localStorage.setItem('user', JSON.stringify(data));\n      return data;\n    } catch (error) {\n      setAuthError(error.message);\n      throw error;\n    }\n  };\n  \n  // Çıkış işlemi\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('user');\n  };\n  \n  // API istekleri için token ekleyen fonksiyon\n  const authFetch = async (url, options = {}) => {\n    if (!currentUser || !currentUser.accessToken) {\n      throw new Error('User is not logged in');\n    }\n    \n    // URL tam URL değilse, API_URL ile birleştir\n    const fullUrl = url.startsWith('http') ? url : `${API_URL}${url}`;\n    \n    const headers = {\n      ...options.headers || {},\n      'Authorization': `Bearer ${currentUser.accessToken}`,\n    };\n    \n    return fetch(fullUrl, {\n      ...options,\n      headers,\n    });\n  };\n  \n  const value = {\n    currentUser,\n    loading,\n    authError,\n    login,\n    register,\n    logout,\n    authFetch\n  };\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}